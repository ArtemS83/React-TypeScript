{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","pages/AboutUsPage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","activeClassName","TodoForm","onSubmit","useState","text","setText","evt","preventDefault","trim","length","id","type","value","onChange","event","target","htmlFor","TodoList","todos","onToggleCompleted","onDeleteTodo","map","completed","classNames","checked","onClick","getInitialTodoState","savedTodos","localStorage","getItem","JSON","parse","TodosPage","setTodos","useEffect","setItem","stringify","newTodo","shortid","generate","prevTodos","todoId","filter","todo","AboutUsPage","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA2BeA,EAxByB,WACtC,OACE,8BACE,sBAAKC,UAAU,gCAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAvB,sBAGA,qBAAIA,UAAU,6BAAd,UACE,6BACE,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAgB,aAArC,qBAIF,6BACE,cAAC,IAAD,CAASD,GAAG,SAASC,gBAAgB,aAArC,iC,wBC6BGC,EAvC4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5C,EAAwBC,mBAAiB,IAAzC,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OACE,mCACE,uBAAMP,UAAU,sBAAsBI,SAZvB,SAACI,GAClBA,EAAIC,iBACuB,IAAvBH,EAAKI,OAAOC,SAIhBP,EAASE,GACTC,EAAQ,MAKN,UACE,uBACEK,GAAG,OACHC,KAAK,OAELC,MAAOR,EACPN,UAAU,WACVe,SAvBc,SAACC,GACrBT,EAAQS,EAAMC,OAAOH,UAwBjB,uBAAOI,QAAQ,OAAOlB,UA3BV,qBA2BZ,8B,iBCkBOmB,EAzC4B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,aAEA,OACE,mCACGF,EAAMT,OAAS,EACd,oBAAIX,UAAU,WAAd,SACGoB,EAAMG,KAAI,gBAAGX,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAMkB,EAAb,EAAaA,UAAb,OACT,oBAEExB,UAAWyB,IAAW,WAAY,CAChCD,UAAWA,IAHf,SAME,kCACE,uBACEX,KAAK,WACLa,QAASF,EACTT,SAAU,kBAAMM,EAAkBT,MAEpC,+BAAON,IACP,wBACEO,KAAK,SACLb,UAAU,gBACV2B,QAAS,kBAAML,EAAaV,IAH9B,wBAZGA,QAwBX,mBAAGZ,UAAU,SAAb,yB,iBCxCF4B,EAAsB,WAC1B,IAAMC,EAAaC,aAAaC,QAAQ,WAExC,OAAOF,EAAaG,KAAKC,MAAMJ,GAAc,IA2ChCK,EAxCa,WAC1B,MAA0B7B,mBAAkBuB,GAA5C,mBAAOR,EAAP,KAAce,EAAd,KAEAC,qBAAU,WACRN,aAAaO,QAAQ,UAAWL,KAAKM,UAAUlB,MAC9C,CAACA,IAuBJ,OACE,qCACE,cAAC,EAAD,CAAUhB,SAvBS,SAACE,GACtB,IAAMiC,EAAiB,CACrB3B,GAAI4B,IAAQC,WACZnC,OACAkB,WAAW,GAEbW,GAAS,SAAAO,GAAS,OAAKH,GAAL,mBAAiBG,UAkBjC,cAAC,EAAD,CACEtB,MAAOA,EACPE,aAToB,SAACqB,GACzBR,GAAS,SAAAO,GAAS,OAAIA,EAAUE,QAAO,SAAAC,GAAI,OAAIA,EAAKjC,KAAO+B,SASvDtB,kBAlByB,SAACsB,GAC9BR,GAAS,SAAAO,GAAS,OAChBA,EAAUnB,KAAI,SAAAsB,GAAI,OAChBA,EAAKjC,KAAO+B,EAAZ,2BAA0BE,GAA1B,IAAgCrB,WAAYqB,EAAKrB,YAAcqB,eCXxDC,EAtBe,WAC5B,OACE,gCACE,oBAAI9C,UAAU,SAAd,sBACA,mBAAGA,UAAU,SAAb,qxBCiBS+C,EAjBO,WACpB,OACE,mCACE,eAAC,IAAD,CAAYC,SAAS,IAArB,UACE,cAAC,EAAD,IACA,qBAAKhD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,cAAC,IAAD,CAAOgB,KAAK,SAASC,UAAWjB,IAChC,cAAC,IAAD,CAAOgB,KAAK,SAASC,UAAWL,eCV5CM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3fe891d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\n\r\nconst Navbar: React.FunctionComponent = () => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper lime accent-4 px1\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          React+TS\r\n        </Link>\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/todos\" activeClassName=\"activeLink\">\r\n              Todos\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/about\" activeClassName=\"activeLink\">\r\n              About us\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef, useState } from 'react';\r\n\r\ninterface ITodoFormProps {\r\n  onSubmit(text: string): void;\r\n}\r\n\r\n// const TodoForm: React.FC<{ onSubmit: (text: string) => void }> = ({\r\nconst TodoForm: React.FC<ITodoFormProps> = ({ onSubmit }) => {\r\n  const [text, setText] = useState<string>('');\r\n  // const ref = useRef<HTMLInputElement>(null);\r\n\r\n  let activeClass = 'label color active';\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handelForm = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault();\r\n    if (text.trim().length === 0) return;\r\n    // console.log(ref.current!.value);\r\n    // console.log(ref.current!.isConnected); // true or false\r\n    // ref.current!.value /= ''; // setText('');\r\n    onSubmit(text);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"input-field col s12\" onSubmit={handelForm}>\r\n        <input\r\n          id=\"text\"\r\n          type=\"text\"\r\n          // ref={ref}\r\n          value={text}\r\n          className=\"validate\"\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor=\"text\" className={activeClass}>\r\n          Enter text\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\ninterface ITodo {\r\n  id: string;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\ninterface ITodoListProps {\r\n  todos: ITodo[];\r\n  onToggleCompleted: (todoId: string) => void;\r\n  //   onDeleteTodo: (todoId: string) => void;\r\n  onDeleteTodo(todoId: string): void;\r\n}\r\nconst TodoList: React.FC<ITodoListProps> = ({\r\n  todos,\r\n  onToggleCompleted,\r\n  onDeleteTodo,\r\n}) => {\r\n  return (\r\n    <>\r\n      {todos.length > 0 ? (\r\n        <ul className=\"TodoList\">\r\n          {todos.map(({ id, text, completed }) => (\r\n            <li\r\n              key={id}\r\n              className={classNames('todoItem', {\r\n                completed: completed,\r\n              })}\r\n            >\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={completed}\r\n                  onChange={() => onToggleCompleted(id)}\r\n                />\r\n                <span>{text}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"TodoList__btn\"\r\n                  onClick={() => onDeleteTodo(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </label>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"center\">No Todos</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TodoForm from '../components/TodoForm';\r\nimport TodoList from '../components/TodoList';\r\nimport shortid from 'shortid';\r\ninterface ITodo {\r\n  id: string;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst getInitialTodoState = () => {\r\n  const savedTodos = localStorage.getItem('todosTS');\r\n\r\n  return savedTodos ? JSON.parse(savedTodos) : [];\r\n};\r\n\r\nconst TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>(getInitialTodoState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todosTS', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodoHandler = (text: string) => {\r\n    const newTodo: ITodo = {\r\n      id: shortid.generate(),\r\n      text,\r\n      completed: false,\r\n    };\r\n    setTodos(prevTodos => [newTodo, ...prevTodos]);\r\n  };\r\n\r\n  const toggleCompletedHandler = (todoId: string) => {\r\n    setTodos(prevTodos =>\r\n      prevTodos.map(todo =>\r\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\r\n      ),\r\n    );\r\n  };\r\n\r\n  const deleteTodoHandler = (todoId: string) => {\r\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TodoForm onSubmit={addTodoHandler} />\r\n      <TodoList\r\n        todos={todos}\r\n        onDeleteTodo={deleteTodoHandler}\r\n        onToggleCompleted={toggleCompletedHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodosPage;\r\n","import React from 'react';\r\n\r\nconst AboutUsPage: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">About Us</h1>\r\n      <p className=\"center\">\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo neque\r\n        voluptas sapiente hic dolorum fuga velit voluptatibus minima ducimus\r\n        delectus itaque reprehenderit non doloribus, illum cum, asperiores omnis\r\n        quae repellat dolores ipsam alias. Ad, aperiam sint aliquam esse\r\n        consequatur reiciendis natus nesciunt ut, quaerat vel enim, recusandae\r\n        repudiandae? Quasi aperiam praesentium corporis veniam modi, beatae quis\r\n        nemo vero perferendis architecto tempora, provident vel, nesciunt\r\n        voluptatibus illo perspiciatis aliquid inventore repellat explicabo ut\r\n        consectetur error. Deleniti, magni veritatis! Incidunt, ad ab ullam\r\n        exercitationem, aspernatur optio sequi sint a eveniet, veniam provident\r\n        cupiditate soluta totam harum adipisci. Et libero sapiente animi\r\n        similique!\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUsPage;\r\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport TodosPage from './pages/TodosPage';\nimport AboutUsPage from './pages/AboutUsPage';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <HashRouter basename=\"/\">\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={TodosPage} />\n            <Route path=\"/todos\" component={TodosPage} />\n            <Route path=\"/about\" component={AboutUsPage} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}